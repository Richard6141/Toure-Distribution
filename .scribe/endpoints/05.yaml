name: Entrepôts
description: |-

  APIs pour la gestion des entrepôts et l'attribution des responsables
endpoints:
  -
    httpMethods:
      - GET
    uri: api/entrepots
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des entrepôts'
      description: 'Récupère la liste paginée des entrepôts avec possibilité de filtrage.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numéro de la page.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Recherche par nom, code ou adresse.'
        required: false
        example: Central
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Filtrer par statut actif (true/false).'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'Filtrer par responsable (UUID).'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      has_user:
        name: has_user
        description: 'Filtrer les entrepôts avec/sans responsable.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Champ de tri (name, code, created_at).'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'Ordre de tri (asc, desc).'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      with_user:
        name: with_user
        description: 'Inclure les informations du responsable.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: Central
      is_active: true
      user_id: 550e8400-e29b-41d4-a716-446655440001
      has_user: true
      sort_by: name
      sort_order: asc
      with_user: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
                "code": "ENT001",
                "name": "Entrepôt Central",
                "adresse": "123 Rue de l'Industrie",
                "is_active": true,
                "user_id": "550e8400-e29b-41d4-a716-446655440001",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z",
                "user": {
                  "user_id": "550e8400-e29b-41d4-a716-446655440001",
                  "name": "Jean Dupont",
                  "email": "jean.dupont@example.com"
                }
              }
            ],
            "links": {
              "first": "http://api.example.com/entrepots?page=1",
              "last": "http://api.example.com/entrepots?page=5",
              "prev": null,
              "next": "http://api.example.com/entrepots?page=2"
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 5,
              "per_page": 15,
              "to": 15,
              "total": 75
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/entrepots
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un entrepôt'
      description: 'Crée un nouvel entrepôt dans le système. Le code est généré automatiquement.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Nom de l'entrepôt."
        required: true
        example: 'Entrepôt Central'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      adresse:
        name: adresse
        description: "Adresse de l'entrepôt."
        required: false
        example: "123 Rue de l'Industrie"
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      is_active:
        name: is_active
        description: 'Statut actif (par défaut: true).'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'UUID du responsable (optionnel).'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Entrepôt Central'
      adresse: "123 Rue de l'Industrie"
      is_active: true
      user_id: 550e8400-e29b-41d4-a716-446655440001
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT-ABC123",
            "name": "Entrepôt Central",
            "adresse": "123 Rue de l'Industrie",
            "is_active": true,
            "user_id": "550e8400-e29b-41d4-a716-446655440001",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z",
            "user": {
              "user_id": "550e8400-e29b-41d4-a716-446655440001",
              "name": "Jean Dupont",
              "email": "jean.dupont@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Les données fournies ne sont pas valides.",
            "errors": {
              "name": ["Le nom est obligatoire."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/entrepots/{id}'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un entrepôt'
      description: "Récupère les détails d'un entrepôt spécifique."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters:
      with_user:
        name: with_user
        description: 'Inclure les informations du responsable.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      with_user: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT001",
            "name": "Entrepôt Central",
            "adresse": "123 Rue de l'Industrie",
            "is_active": true,
            "user_id": "550e8400-e29b-41d4-a716-446655440001",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z",
            "user": {
              "user_id": "550e8400-e29b-41d4-a716-446655440001",
              "name": "Jean Dupont",
              "email": "jean.dupont@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/entrepots/{id}'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un entrepôt'
      description: "Met à jour les informations d'un entrepôt existant. Le code ne peut pas être modifié."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Nom de l'entrepôt."
        required: false
        example: 'Entrepôt Central'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      adresse:
        name: adresse
        description: "Adresse de l'entrepôt."
        required: false
        example: "123 Rue de l'Industrie"
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      is_active:
        name: is_active
        description: 'Statut actif.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'UUID du responsable.'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Entrepôt Central'
      adresse: "123 Rue de l'Industrie"
      is_active: true
      user_id: 550e8400-e29b-41d4-a716-446655440001
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT-ABC123",
            "name": "Entrepôt Central Mis à Jour",
            "adresse": "456 Nouvelle Adresse",
            "is_active": true,
            "user_id": "550e8400-e29b-41d4-a716-446655440001",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-02T00:00:00.000000Z",
            "user": {
              "user_id": "550e8400-e29b-41d4-a716-446655440001",
              "name": "Jean Dupont",
              "email": "jean.dupont@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Les données fournies ne sont pas valides."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/entrepots/{id}'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un entrepôt'
      description: "Met à jour les informations d'un entrepôt existant. Le code ne peut pas être modifié."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Nom de l'entrepôt."
        required: false
        example: 'Entrepôt Central'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      adresse:
        name: adresse
        description: "Adresse de l'entrepôt."
        required: false
        example: "123 Rue de l'Industrie"
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      is_active:
        name: is_active
        description: 'Statut actif.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'UUID du responsable.'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Entrepôt Central'
      adresse: "123 Rue de l'Industrie"
      is_active: true
      user_id: 550e8400-e29b-41d4-a716-446655440001
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT-ABC123",
            "name": "Entrepôt Central Mis à Jour",
            "adresse": "456 Nouvelle Adresse",
            "is_active": true,
            "user_id": "550e8400-e29b-41d4-a716-446655440001",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-02T00:00:00.000000Z",
            "user": {
              "user_id": "550e8400-e29b-41d4-a716-446655440001",
              "name": "Jean Dupont",
              "email": "jean.dupont@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Les données fournies ne sont pas valides."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/entrepots/{id}'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un entrepôt'
      description: 'Supprime définitivement un entrepôt.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/entrepots/{id}/assign-user'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Attribuer un responsable à un entrepôt'
      description: "Assigne un utilisateur comme responsable d'un entrepôt."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'UUID du responsable à attribuer.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 550e8400-e29b-41d4-a716-446655440001
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT001",
            "name": "Entrepôt Central",
            "adresse": "123 Rue de l'Industrie",
            "is_active": true,
            "user_id": "550e8400-e29b-41d4-a716-446655440001",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-02T00:00:00.000000Z",
            "user": {
              "user_id": "550e8400-e29b-41d4-a716-446655440001",
              "name": "Jean Dupont",
              "email": "jean.dupont@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Cet entrepôt a déjà un responsable attribué."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Les données fournies ne sont pas valides.",
            "errors": {
              "user_id": ["L'utilisateur sélectionné n'existe pas."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/entrepots/{id}/unassign-user'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: "Désattribuer le responsable d'un entrepôt"
      description: 'Retire le responsable assigné à un entrepôt.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT001",
            "name": "Entrepôt Central",
            "adresse": "123 Rue de l'Industrie",
            "is_active": true,
            "user_id": null,
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-02T00:00:00.000000Z",
            "user": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Aucun responsable n'est attribué à cet entrepôt."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/entrepots/{id}/change-user'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: "Changer le responsable d'un entrepôt"
      description: 'Remplace le responsable actuel par un nouveau responsable.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'UUID du nouveau responsable.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 550e8400-e29b-41d4-a716-446655440002
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
            "code": "ENT001",
            "name": "Entrepôt Central",
            "adresse": "123 Rue de l'Industrie",
            "is_active": true,
            "user_id": "550e8400-e29b-41d4-a716-446655440002",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-02T00:00:00.000000Z",
            "user": {
              "user_id": "550e8400-e29b-41d4-a716-446655440002",
              "name": "Marie Martin",
              "email": "marie.martin@example.com"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Les données fournies ne sont pas valides.",
            "errors": {
              "user_id": ["L'utilisateur sélectionné n'existe pas."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/entrepots/{id}/products-stocks'
    metadata:
      groupName: Entrepôts
      groupDescription: |-

        APIs pour la gestion des entrepôts et l'attribution des responsables
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtenir tous les produits avec leurs stocks pour un entrepôt spécifique'
      description: |-
        Récupère la liste complète des produits avec leurs informations de stock
        dans un entrepôt donné. Inclut également les produits sans stock (quantité 0).
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters:
      with_category:
        name: with_category
        description: 'Inclure les informations de catégorie des produits.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      only_in_stock:
        name: only_in_stock
        description: 'Afficher uniquement les produits en stock (quantité > 0).'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      only_active:
        name: only_active
        description: 'Afficher uniquement les produits actifs.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Rechercher par nom ou code de produit.'
        required: false
        example: Laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Champ de tri (name, quantite, available_quantity).'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'Ordre de tri (asc, desc).'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      with_category: true
      only_in_stock: false
      only_active: true
      search: Laptop
      sort_by: name
      sort_order: asc
      per_page: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "entrepot": {
                "entrepot_id": "550e8400-e29b-41d4-a716-446655440000",
                "code": "ENT001",
                "name": "Entrepôt Central",
                "adresse": "123 Rue de l'Industrie",
                "is_active": true
              },
              "products": {
                "current_page": 1,
                "data": [
                  {
                    "product_id": "550e8400-e29b-41d4-a716-446655440003",
                    "code": "PRO-ABC123",
                    "name": "Laptop Dell XPS 15",
                    "description": "Ordinateur portable haute performance",
                    "unit_price": 1500000.00,
                    "cost": 1200000.00,
                    "min_stock_level": 5,
                    "is_active": true,
                    "picture": "laptop-dell-xps.jpg",
                    "category": {
                      "product_category_id": "550e8400-e29b-41d4-a716-446655440010",
                      "label": "Informatique"
                    },
                    "stock": {
                      "stock_id": "550e8400-e29b-41d4-a716-446655440020",
                      "quantite": 50,
                      "reserved_quantity": 5,
                      "available_quantity": 45,
                      "is_below_minimum": false,
                      "last_updated": "2024-10-15T10:30:00.000000Z"
                    }
                  },
                  {
                    "product_id": "550e8400-e29b-41d4-a716-446655440004",
                    "code": "PRO-XYZ789",
                    "name": "Souris Logitech",
                    "description": "Souris sans fil ergonomique",
                    "unit_price": 25000.00,
                    "cost": 18000.00,
                    "min_stock_level": 20,
                    "is_active": true,
                    "picture": "souris-logitech.jpg",
                    "category": {
                      "product_category_id": "550e8400-e29b-41d4-a716-446655440010",
                      "label": "Informatique"
                    },
                    "stock": {
                      "stock_id": null,
                      "quantite": 0,
                      "reserved_quantity": 0,
                      "available_quantity": 0,
                      "is_below_minimum": true,
                      "last_updated": null
                    }
                  }
                ],
                "per_page": 20,
                "total": 2
              },
              "summary": {
                "total_products": 2,
                "products_in_stock": 1,
                "products_out_of_stock": 1,
                "products_below_minimum": 1,
                "total_stock_value": 60000000.00
              }
            },
            "message": "Produits de l'entrepôt récupérés avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Entrepôt non trouvé."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
