name: 'Client Types Management'
description: |-

  APIs pour gérer les types de clients
endpoints:
  -
    httpMethods:
      - GET
    uri: api/client-types/trashed/list
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les types de clients supprimés'
      description: 'Récupère la liste des types de clients supprimés (soft delete).'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page à récupérer.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 16
      per_page: 22
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
                "label": "Ancien Premium",
                "description": "Type de client supprimé",
                "created_at": "2024-01-15T10:30:00Z",
                "updated_at": "2024-01-15T10:30:00Z",
                "deleted_at": "2024-01-15T12:00:00Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/client-types
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste tous les types de clients'
      description: |-
        Récupère la liste de tous les types de clients avec pagination optionnelle.
        Vous pouvez filtrer par label en utilisant le paramètre de recherche.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page à récupérer (pagination).'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max: 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Rechercher par label.'
        required: false
        example: Premium
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      with_clients:
        name: with_clients
        description: 'Inclure les clients associés.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: Premium
      with_clients: false
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      with_clients:
        name: with_clients
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 16
      per_page: 22
      search: g
      with_clients: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
                "label": "Premium",
                "description": "Client premium avec avantages spéciaux",
                "created_at": "2024-01-15T10:30:00Z",
                "updated_at": "2024-01-15T10:30:00Z"
              }
            ],
            "links": {
              "first": "http://localhost/api/client-types?page=1",
              "last": "http://localhost/api/client-types?page=1",
              "prev": null,
              "next": null
            },
            "meta": {
              "current_page": 1,
              "from": 1,
              "last_page": 1,
              "per_page": 15,
              "to": 1,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Paramètres de requête invalides",
            "errors": {
              "per_page": ["Le nombre d'éléments par page ne peut pas dépasser 100"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/client-types
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouveau type de client'
      description: |-
        Crée un nouveau type de client avec les informations fournies.
        L'UUID est généré automatiquement.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le nom du type de client. Doit être unique.'
        required: true
        example: VIP
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      icon:
        name: icon
        description: "optionnel Le nom de l'icon. Doit être unique."
        required: false
        example: eye
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      description:
        name: description
        description: 'optionnel Description du type de client.'
        required: false
        example: 'Client VIP avec services exclusifs'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      label: VIP
      icon: eye
      description: 'Client VIP avec services exclusifs'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
              "label": "VIP",
              "icon": "eye",
              "description": "Client VIP avec services exclusifs",
              "created_at": "2024-01-15T10:30:00Z",
              "updated_at": "2024-01-15T10:30:00Z"
            },
            "message": "Type de client créé avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Données de validation échouées",
            "errors": {
              "label": ["Ce label existe déjà"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/client-types/{client_type_id}'
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un type de client spécifique'
      description: "Récupère les détails d'un type de client par son ID."
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_type_id:
        name: client_type_id
        description: "L'UUID du type de client."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters:
      with_clients:
        name: with_clients
        description: 'Inclure les clients associés.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      with_clients: false
    bodyParameters:
      with_clients:
        name: with_clients
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      with_clients: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
              "label": "Premium",
              "description": "Client premium avec avantages spéciaux",
              "created_at": "2024-01-15T10:30:00Z",
              "updated_at": "2024-01-15T10:30:00Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Type de client non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/client-types/{client_type_id}'
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un type de client'
      description: |-
        Met à jour les informations d'un type de client existant.
        Seuls les champs fournis seront mis à jour.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_type_id:
        name: client_type_id
        description: "L'UUID du type de client."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le nom du type de client. Doit être unique.'
        required: false
        example: 'Premium Plus'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description du type de client.'
        required: false
        example: 'Client premium avec avantages étendus'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      label: 'Premium Plus'
      description: 'Client premium avec avantages étendus'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
              "label": "Premium Plus",
              "description": "Client premium avec avantages étendus",
              "created_at": "2024-01-15T10:30:00Z",
              "updated_at": "2024-01-15T11:00:00Z"
            },
            "message": "Type de client mis à jour avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Type de client non trouvé"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Données de validation échouées",
            "errors": {
              "label": ["Ce label existe déjà"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/client-types/{client_type_id}'
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un type de client'
      description: |-
        Met à jour les informations d'un type de client existant.
        Seuls les champs fournis seront mis à jour.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_type_id:
        name: client_type_id
        description: "L'UUID du type de client."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le nom du type de client. Doit être unique.'
        required: false
        example: 'Premium Plus'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description du type de client.'
        required: false
        example: 'Client premium avec avantages étendus'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      label: 'Premium Plus'
      description: 'Client premium avec avantages étendus'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
              "label": "Premium Plus",
              "description": "Client premium avec avantages étendus",
              "created_at": "2024-01-15T10:30:00Z",
              "updated_at": "2024-01-15T11:00:00Z"
            },
            "message": "Type de client mis à jour avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Type de client non trouvé"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Données de validation échouées",
            "errors": {
              "label": ["Ce label existe déjà"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/client-types/{client_type_id}'
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un type de client'
      description: |-
        Supprime définitivement un type de client.
        Attention : cette action est irréversible.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_type_id:
        name: client_type_id
        description: "L'UUID du type de client."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Type de client supprimé avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Type de client non trouvé"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: |-
          {
            "message": "Impossible de supprimer ce type de client car il est associé à des clients existants"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/client-types/{client_type_id}/restore'
    metadata:
      groupName: 'Client Types Management'
      groupDescription: |-

        APIs pour gérer les types de clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Restaurer un type de client supprimé (soft delete)'
      description: 'Restaure un type de client qui a été supprimé avec soft delete.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_type_id:
        name: client_type_id
        description: "L'UUID du type de client."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "client_type_id": "550e8400-e29b-41d4-a716-446655440000",
              "label": "Premium",
              "description": "Client premium avec avantages spéciaux",
              "created_at": "2024-01-15T10:30:00Z",
              "updated_at": "2024-01-15T11:00:00Z",
              "deleted_at": null
            },
            "message": "Type de client restauré avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Type de client non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
