name: Produits
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les produits'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "product_id": "uuid",
                "code": "PRO-ABC123",
                "name": "Produit Exemple",
                "description": "Description du produit",
                "unit_price": 1500.50,
                "cost": 1200,
                "minimum_cost": 1000,
                "min_stock_level": 10,
                "is_active": true,
                "picture": "image.jpg",
                "product_category_id": "uuid",
                "category": {
                  "product_category_id": "uuid",
                  "label": "Catégorie Exemple"
                }
              }
            ],
            "message": "Liste des produits"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouveau produit'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nom du produit. Exemple: "Produit Exemple"'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description du produit. Exemple: "Description du produit"'
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      product_category_id:
        name: product_category_id
        description: 'ID de la catégorie. Exemple: "uuid"'
        required: true
        example: architecto
        type: uuid
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      unit_price:
        name: unit_price
        description: 'Prix unitaire. Exemple: 1500.50'
        required: true
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost:
        name: cost
        description: 'Coût du produit. Exemple: 1200'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_cost:
        name: minimum_cost
        description: 'Coût minimum. Exemple: 1000'
        required: false
        example: architecto
        type: numeric
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_stock_level:
        name: min_stock_level
        description: 'Quantité minimale en stock. Exemple: 10'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_active:
        name: is_active
        description: 'Produit actif ou non. Exemple: true'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      picture:
        name: picture
        description: 'URL ou nom de l''image. Exemple: "image.jpg"'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      description: 'Eius et animi quos velit et.'
      product_category_id: architecto
      unit_price: architecto
      cost: architecto
      minimum_cost: architecto
      min_stock_level: 16
      is_active: false
      picture: architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "data": {
              "product_id": "uuid",
              "code": "PRO-ABC123",
              "name": "Produit Exemple",
              "description": "Description du produit",
              "unit_price": 1500.50,
              "cost": 1200,
              "minimum_cost": 1000,
              "min_stock_level": 10,
              "is_active": true,
              "picture": "image.jpg",
              "product_category_id": "uuid",
              "category": {
                "product_category_id": "uuid",
                "label": "Catégorie Exemple"
              }
            },
            "message": "Produit créé avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Les données sont invalides",
            "errors": {
              "name": ["Le nom du produit est obligatoire", "Ce nom existe déjà"],
              "product_category_id": ["La catégorie est obligatoire"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}'
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un produit par ID'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Product] architecto"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{id}'
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un produit'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      product_category_id:
        name: product_category_id
        description: 'Must be a valid UUID. The <code>product_category_id</code> of an existing record in the product_categories table.'
        required: true
        example: 21c4122b-d554-3723-966c-6d723ea5293f
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      unit_price:
        name: unit_price
        description: 'Must be at least 0.'
        required: true
        example: 37
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost:
        name: cost
        description: 'Must be at least 0.'
        required: false
        example: 9
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_cost:
        name: minimum_cost
        description: 'Must be at least 0.'
        required: false
        example: 52
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_stock_level:
        name: min_stock_level
        description: 'Must be at least 0.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      picture:
        name: picture
        description: 'Must not be greater than 255 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      description: 'Eius et animi quos velit et.'
      product_category_id: 21c4122b-d554-3723-966c-6d723ea5293f
      unit_price: 37
      cost: 9
      minimum_cost: 52
      min_stock_level: 8
      is_active: true
      picture: k
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un produit (soft delete)'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/category/{categoryId}'
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les produits par catégorie'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      categoryId:
        name: categoryId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      categoryId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[],"message":"Produits de la cat\u00e9gorie"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/products/{id}/restore'
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restaurer un produit supprimé'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Product] architecto"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}/force'
    metadata:
      groupName: Produits
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer définitivement un produit'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
