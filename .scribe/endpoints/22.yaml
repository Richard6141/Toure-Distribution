name: 'Gestion des Ventes'
description: |-

  API pour gérer les ventes aux clients.
  Toutes les routes nécessitent une authentification via Sanctum.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/ventes
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des ventes'
      description: 'Récupère la liste paginée de toutes les ventes avec leurs clients.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numéro de la page.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Rechercher par numéro de vente.'
        required: false
        example: VTE-2025-001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_id:
        name: client_id
        description: 'Filtrer par ID du client.'
        required: false
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filtrer par statut (en_attente, validee, livree, partiellement_livree, annulee).'
        required: false
        example: validee
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      statut_paiement:
        name: statut_paiement
        description: 'Filtrer par statut de paiement (non_paye, paye_partiellement, paye_totalement).'
        required: false
        example: paye_partiellement
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_debut:
        name: date_debut
        description: 'date Filtrer par date minimum (format: Y-m-d).'
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_fin:
        name: date_fin
        description: 'date Filtrer par date maximum (format: Y-m-d).'
        required: false
        example: '2025-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      montant_min:
        name: montant_min
        description: 'numeric Filtrer par montant minimum.'
        required: false
        example: '1000'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      montant_max:
        name: montant_max
        description: 'numeric Filtrer par montant maximum.'
        required: false
        example: '50000'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: VTE-2025-001
      client_id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
      status: validee
      statut_paiement: paye_partiellement
      date_debut: '2025-01-01'
      date_fin: '2025-12-31'
      montant_min: '1000'
      montant_max: '50000'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Liste des ventes récupérée avec succès",
            "data": {
              "current_page": 1,
              "data": [
                {
                  "vente_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
                  "numero_vente": "VTE-2025-0001",
                  "client_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b",
                  "date_vente": "2025-01-15T10:00:00.000000Z",
                  "montant_total": "25000.00",
                  "montant_net": "23750.00",
                  "remise": "1250.00",
                  "status": "validee",
                  "statut_paiement": "paye_partiellement",
                  "created_at": "2025-01-15T10:00:00.000000Z",
                  "client": {
                    "client_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b",
                    "code": "CLI001",
                    "name_client": "Entreprise ABC",
                    "phonenumber": "+229 97 00 00 00"
                  }
                }
              ],
              "total": 45
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ventes
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer une vente'
      description: |-
        Enregistre une nouvelle vente avec ses détails.
        Le numéro de vente est généré automatiquement au format VTE-YYYY-0001.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      client_id:
        name: client_id
        description: "L'UUID du client."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_vente:
        name: date_vente
        description: 'La date et heure de la vente (format: Y-m-d H:i:s).'
        required: true
        example: '2025-01-15 10:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      remise:
        name: remise
        description: 'La remise globale accordée.'
        required: false
        example: '1250.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      note:
        name: note
        description: 'Des notes ou observations.'
        required: false
        example: 'Vente avec remise spéciale'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      details:
        name: details
        description: 'Les détails de la vente (produits).'
        required: true
        example:
          -
            product_id: uuid
            quantite: 10
            prix_unitaire: 2500
            remise_ligne: 0
            taux_taxe: 18
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'details[].product_id':
        name: 'details[].product_id'
        description: "L'UUID du produit."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'details[].quantite':
        name: 'details[].quantite'
        description: 'La quantité vendue.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'details[].prix_unitaire':
        name: 'details[].prix_unitaire'
        description: 'Le prix unitaire.'
        required: true
        example: '2500.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'details[].remise_ligne':
        name: 'details[].remise_ligne'
        description: 'La remise sur la ligne.'
        required: false
        example: '0'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      'details[].taux_taxe':
        name: 'details[].taux_taxe'
        description: 'Le taux de taxe en %.'
        required: false
        example: '18'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      client_id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b
      date_vente: '2025-01-15 10:00:00'
      remise: '1250.00'
      note: 'Vente avec remise spéciale'
      details:
        -
          product_id: uuid
          quantite: 10
          prix_unitaire: 2500
          remise_ligne: 0
          taux_taxe: 18
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Vente créée avec succès",
            "data": {
              "vente_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "numero_vente": "VTE-2025-0001",
              "client_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b",
              "date_vente": "2025-01-15T10:00:00.000000Z",
              "montant_ht": "21186.44",
              "montant_taxe": "3813.56",
              "montant_total": "25000.00",
              "remise": "1250.00",
              "montant_net": "23750.00",
              "status": "en_attente",
              "statut_paiement": "non_paye",
              "details": [
                {
                  "product_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c",
                  "quantite": 10,
                  "prix_unitaire": "2500.00",
                  "montant_ht": "21186.44",
                  "montant_ttc": "25000.00"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une vente'
      description: "Récupère les détails complets d'une vente avec client, détails et paiements."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Détails de la vente récupérés avec succès",
            "data": {
              "vente_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "numero_vente": "VTE-2025-0001",
              "date_vente": "2025-01-15T10:00:00.000000Z",
              "montant_total": "25000.00",
              "montant_net": "23750.00",
              "montant_paye": "10000.00",
              "montant_restant": "13750.00",
              "status": "validee",
              "statut_paiement": "paye_partiellement",
              "client": {
                "client_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b",
                "code": "CLI001",
                "name_client": "Entreprise ABC"
              },
              "detail_ventes": [
                {
                  "product_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c",
                  "quantite": 10,
                  "prix_unitaire": "2500.00",
                  "montant_ttc": "25000.00",
                  "product": {
                    "product_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c",
                    "code": "PROD001",
                    "name": "Produit A"
                  }
                }
              ],
              "paiements": [
                {
                  "paiement_vente_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2d",
                  "reference_paiement": "PAYV-2025-0001",
                  "montant": "10000.00",
                  "mode_paiement": "mobile_money",
                  "date_paiement": "2025-01-15T14:00:00.000000Z"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une vente'
      description: |-
        Met à jour les informations d'une vente existante.
        Note: Le numéro de vente ne peut pas être modifié.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Le statut de la vente.'
        required: false
        example: livree
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      note:
        name: note
        description: 'Des notes ou observations.'
        required: false
        example: 'Livraison effectuée'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      status: livree
      note: 'Livraison effectuée'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Vente mise à jour avec succès",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une vente'
      description: |-
        Met à jour les informations d'une vente existante.
        Note: Le numéro de vente ne peut pas être modifié.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Le statut de la vente.'
        required: false
        example: livree
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      note:
        name: note
        description: 'Des notes ou observations.'
        required: false
        example: 'Livraison effectuée'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      status: livree
      note: 'Livraison effectuée'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Vente mise à jour avec succès",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer une vente'
      description: "Effectue une suppression logique (soft delete) d'une vente."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Vente supprimée avec succès"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ventes/trashed/list
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des ventes supprimées'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/ventes/{id}/restore'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restaurer une vente supprimée'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vente.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
