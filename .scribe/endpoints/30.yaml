name: 'Génération de Factures PDF'
description: |-

  API pour générer des factures PDF à partir des ventes avec support A4/A5.
  Toutes les routes nécessitent une authentification via Sanctum.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/factures-pdf/{id}/preview'
    metadata:
      groupName: 'Génération de Factures PDF'
      groupDescription: |-

        API pour générer des factures PDF à partir des ventes avec support A4/A5.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Aperçu de la facture dans le navigateur'
      description: |-
        Affiche la facture directement dans le navigateur sans téléchargement.
        Raccourci pour `/generate?action=preview`.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters:
      format:
        name: format
        description: 'Format du PDF. Valeurs possibles: A4, A5. Défaut: A4.'
        required: false
        example: A4
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      format: A4
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[PDF displayed in browser]'
        headers: []
        description: 'Aperçu réussi'
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Vente non trouvée"
          }
        headers: []
        description: 'Vente non trouvée'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/factures-pdf/{id}/download'
    metadata:
      groupName: 'Génération de Factures PDF'
      groupDescription: |-

        API pour générer des factures PDF à partir des ventes avec support A4/A5.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Télécharger la facture'
      description: |-
        Télécharge directement la facture au format PDF.
        Raccourci pour `/generate?action=download`.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters:
      format:
        name: format
        description: 'Format du PDF. Valeurs possibles: A4, A5. Défaut: A4.'
        required: false
        example: A5
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      format: A5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[Binary PDF Content]'
        headers: []
        description: 'Téléchargement réussi'
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Vente non trouvée"
          }
        headers: []
        description: 'Vente non trouvée'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/factures-pdf/{id}/send-email'
    metadata:
      groupName: 'Génération de Factures PDF'
      groupDescription: |-

        API pour générer des factures PDF à partir des ventes avec support A4/A5.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Envoyer la facture par email au client'
      description: |-
        Envoie la facture PDF par email au client.
        Si l'email n'est pas fourni, utilise l'email enregistré du client.

        **Note:** Cette fonctionnalité nécessite la configuration du service d'email.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID de la vente."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "Email du destinataire. Si non fourni, utilise l'email du client."
        required: false
        example: client@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      message:
        name: message
        description: "Message personnalisé à inclure dans l'email (max 1000 caractères)."
        required: false
        example: 'Merci pour votre achat. Veuillez trouver ci-joint votre facture.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      format:
        name: format
        description: 'Format du PDF à joindre. Valeurs possibles: A4, A5. Défaut: A4.'
        required: false
        example: A4
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      email: client@example.com
      message: 'Merci pour votre achat. Veuillez trouver ci-joint votre facture.'
      format: A4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Facture envoyée par email avec succès",
            "data": {
              "email": "client@example.com",
              "numero_facture": "FACT-2025-0001"
            }
          }
        headers: []
        description: 'Email envoyé avec succès'
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Vente non trouvée"
          }
        headers: []
        description: 'Vente non trouvée'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Aucun email disponible pour ce client"
          }
        headers: []
        description: 'Aucun email disponible'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "email": ["Le champ email doit être une adresse email valide."]
            }
          }
        headers: []
        description: 'Email invalide'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/factures-pdf/generate-batch
    metadata:
      groupName: 'Génération de Factures PDF'
      groupDescription: |-

        API pour générer des factures PDF à partir des ventes avec support A4/A5.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Générer plusieurs factures en lot (ZIP)'
      description: |-
        Génère plusieurs factures PDF et les regroupe dans un fichier ZIP.
        Maximum 50 factures par lot.

        **Note:** Cette fonctionnalité nécessite l'implémentation complète.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      vente_ids:
        name: vente_ids
        description: 'Liste des UUIDs des ventes (min: 1, max: 50).'
        required: true
        example:
          - 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
          - 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      format:
        name: format
        description: 'Format du PDF pour toutes les factures. Valeurs possibles: A4, A5. Défaut: A4.'
        required: false
        example: A4
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      vente_ids:
        - 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        - 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b
      format: A4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Génération en lot en cours...",
            "data": {
              "count": 3
            }
          }
        headers: []
        description: 'Génération en cours'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "vente_ids": ["Le champ vente ids est obligatoire."]
            }
          }
        headers: []
        description: 'Validation échouée - vente_ids manquant'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "vente_ids.0": ["La vente sélectionnée est invalide."]
            }
          }
        headers: []
        description: 'Validation échouée - IDs invalides'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "vente_ids": ["Le nombre maximum de factures par lot est de 50."]
            }
          }
        headers: []
        description: 'Validation échouée - Trop de factures'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
