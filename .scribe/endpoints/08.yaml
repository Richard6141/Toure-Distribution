name: 'Gestion des Stocks'
description: |-

  APIs pour la gestion des stocks de produits dans les entrepôts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/stocks
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les stocks'
      description: 'Récupère la liste de tous les stocks avec pagination et filtres optionnels'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numéro de la page.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'Filtrer par ID du produit.'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entrepot_id:
        name: entrepot_id
        description: "Filtrer par ID de l'entrepôt."
        required: false
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantite_min:
        name: quantite_min
        description: 'Quantité minimum.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantite_max:
        name: quantite_max
        description: 'Quantité maximum.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      product_id: 550e8400-e29b-41d4-a716-446655440000
      entrepot_id: 550e8400-e29b-41d4-a716-446655440001
      quantite_min: 10
      quantite_max: 100
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      product_id:
        name: product_id
        description: 'Must be a valid UUID.'
        required: false
        example: 6b72fe4a-5b40-307c-bc24-f79acf9a1bb9
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      entrepot_id:
        name: entrepot_id
        description: 'Must be a valid UUID.'
        required: false
        example: 977e5426-8d13-3824-86aa-b092f8ae52c5
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantite_min:
        name: quantite_min
        description: 'Must be at least 0.'
        required: false
        example: 76
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantite_max:
        name: quantite_max
        description: 'Must be at least 0.'
        required: false
        example: 60
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 16
      per_page: 22
      product_id: 6b72fe4a-5b40-307c-bc24-f79acf9a1bb9
      entrepot_id: 977e5426-8d13-3824-86aa-b092f8ae52c5
      quantite_min: 76
      quantite_max: 60
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "current_page": 1,
              "data": [
                {
                  "stock_id": "550e8400-e29b-41d4-a716-446655440000",
                  "product_id": "550e8400-e29b-41d4-a716-446655440001",
                  "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
                  "quantite": 50,
                  "reserved_quantity": 5,
                  "available_quantity": 45,
                  "created_at": "2024-01-15T10:30:00.000000Z",
                  "updated_at": "2024-01-15T10:30:00.000000Z",
                  "product": {
                    "product_id": "550e8400-e29b-41d4-a716-446655440001",
                    "name": "Produit Example"
                  },
                  "entrepot": {
                    "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
                    "name": "Entrepôt Principal"
                  }
                }
              ],
              "per_page": 15,
              "total": 1
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stocks
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouveau stock'
      description: 'Crée un nouveau stock pour un produit dans un entrepôt'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      product_id:
        name: product_id
        description: "L'ID du produit."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entrepot_id:
        name: entrepot_id
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      quantite:
        name: quantite
        description: 'La quantité en stock.'
        required: true
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reserved_quantity:
        name: reserved_quantity
        description: 'La quantité réservée (optionnel, défaut: 0).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      product_id: 550e8400-e29b-41d4-a716-446655440001
      entrepot_id: 550e8400-e29b-41d4-a716-446655440002
      quantite: 100
      reserved_quantity: 10
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Stock créé avec succès",
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "product_id": "550e8400-e29b-41d4-a716-446655440001",
              "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
              "quantite": 100,
              "reserved_quantity": 10,
              "available_quantity": 90,
              "created_at": "2024-01-15T10:30:00.000000Z",
              "updated_at": "2024-01-15T10:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "product_id": ["Le champ product_id est requis."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stocks/{id}'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un stock spécifique'
      description: "Récupère les détails d'un stock par son ID"
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_id:
        name: stock_id
        description: "L'ID du stock."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      stock_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "product_id": "550e8400-e29b-41d4-a716-446655440001",
              "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
              "quantite": 50,
              "reserved_quantity": 5,
              "available_quantity": 45,
              "created_at": "2024-01-15T10:30:00.000000Z",
              "updated_at": "2024-01-15T10:30:00.000000Z",
              "product": {
                "product_id": "550e8400-e29b-41d4-a716-446655440001",
                "name": "Produit Example"
              },
              "entrepot": {
                "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
                "name": "Entrepôt Principal"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Stock non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/stocks/{id}'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un stock'
      description: "Met à jour les informations d'un stock existant"
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_id:
        name: stock_id
        description: "L'ID du stock."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      stock_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantite:
        name: quantite
        description: 'La nouvelle quantité en stock.'
        required: false
        example: 75
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reserved_quantity:
        name: reserved_quantity
        description: 'La nouvelle quantité réservée.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      quantite: 75
      reserved_quantity: 15
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Stock mis à jour avec succès",
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "product_id": "550e8400-e29b-41d4-a716-446655440001",
              "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
              "quantite": 75,
              "reserved_quantity": 15,
              "available_quantity": 60,
              "created_at": "2024-01-15T10:30:00.000000Z",
              "updated_at": "2024-01-15T11:45:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Stock non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stocks/{id}'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un stock'
      description: 'Supprime un stock de manière définitive'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_id:
        name: stock_id
        description: "L'ID du stock à supprimer."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      stock_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Stock supprimé avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Stock non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/stocks/{id}/adjust'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajuster la quantité en stock'
      description: "Ajuste la quantité d'un stock (ajout ou retrait)"
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_id:
        name: stock_id
        description: "L'ID du stock."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      stock_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      adjustment:
        name: adjustment
        description: "L'ajustement à appliquer (positif pour ajout, négatif pour retrait)."
        required: true
        example: -10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reason:
        name: reason
        description: "La raison de l'ajustement."
        required: false
        example: '"Inventaire physique"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      adjustment: -10
      reason: '"Inventaire physique"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Quantité ajustée avec succès",
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "product_id": "550e8400-e29b-41d4-a716-446655440001",
              "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
              "quantite": 40,
              "reserved_quantity": 5,
              "available_quantity": 35,
              "previous_quantity": 50,
              "adjustment": -10,
              "reason": "Inventaire physique"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Quantité insuffisante pour cet ajustement"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/stocks/{id}/reserve'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Réserver une quantité'
      description: 'Réserve une quantité spécifique du stock'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_id:
        name: stock_id
        description: "L'ID du stock."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      stock_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantity:
        name: quantity
        description: 'La quantité à réserver.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      quantity: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Quantité réservée avec succès",
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "quantite": 50,
              "reserved_quantity": 10,
              "available_quantity": 40
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Quantité disponible insuffisante"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/stocks/{id}/release'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Libérer une réservation'
      description: 'Libère une quantité réservée du stock'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the stock.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_id:
        name: stock_id
        description: "L'ID du stock."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      stock_id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      quantity:
        name: quantity
        description: 'La quantité à libérer.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      quantity: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Réservation libérée avec succès",
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "quantite": 50,
              "reserved_quantity": 7,
              "available_quantity": 43
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Quantité réservée insuffisante"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stocks/product/{productId}'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Stocks par produit'
      description: "Récupère tous les stocks d'un produit spécifique"
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      productId:
        name: productId
        description: "L'ID du produit."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      productId: 550e8400-e29b-41d4-a716-446655440001
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "stock_id": "550e8400-e29b-41d4-a716-446655440000",
                "product_id": "550e8400-e29b-41d4-a716-446655440001",
                "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
                "quantite": 50,
                "reserved_quantity": 5,
                "available_quantity": 45,
                "entrepot": {
                  "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
                  "name": "Entrepôt Principal"
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stocks/entrepot/{entrepotId}'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Stocks par entrepôt'
      description: "Récupère tous les stocks d'un entrepôt spécifique"
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      entrepotId:
        name: entrepotId
        description: "L'ID de l'entrepôt."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440002
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      entrepotId: 550e8400-e29b-41d4-a716-446655440002
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "stock_id": "550e8400-e29b-41d4-a716-446655440000",
                "product_id": "550e8400-e29b-41d4-a716-446655440001",
                "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
                "quantite": 50,
                "reserved_quantity": 5,
                "available_quantity": 45,
                "product": {
                  "product_id": "550e8400-e29b-41d4-a716-446655440001",
                  "name": "Produit Example"
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/stocks/{id}/restore'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: 'Restaurer un stock supprimé'
      description: 'Restaure un stock qui a été supprimé de manière logique'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID du stock à restaurer."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Stock restauré avec succès",
            "data": {
              "stock_id": "550e8400-e29b-41d4-a716-446655440000",
              "product_id": "550e8400-e29b-41d4-a716-446655440001",
              "entrepot_id": "550e8400-e29b-41d4-a716-446655440002",
              "quantite": 50,
              "reserved_quantity": 5,
              "available_quantity": 45
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Stock non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/stocks/{id}/force'
    metadata:
      groupName: 'Gestion des Stocks'
      groupDescription: |-

        APIs pour la gestion des stocks de produits dans les entrepôts
      subgroup: ''
      subgroupDescription: ''
      title: "Suppression définitive d'un stock"
      description: 'Supprime définitivement un stock de la base de données'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'ID du stock à supprimer définitivement."
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Stock supprimé définitivement"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Stock non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
