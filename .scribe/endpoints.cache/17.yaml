## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des Chauffeurs'
description: |-

  API pour gérer les chauffeurs (conducteurs) de l'application.
  Toutes les routes nécessitent une authentification via Sanctum.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/chauffeurs
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des chauffeurs'
      description: 'Récupère la liste paginée de tous les chauffeurs actifs.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numéro de la page.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Rechercher par nom ou numéro de téléphone.'
        required: false
        example: Jean
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filtrer par statut (actif, inactif, en_conge).'
        required: false
        example: actif
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      permis_valide:
        name: permis_valide
        description: 'Filtrer par permis valide (1 ou 0).'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: Jean
      status: actif
      permis_valide: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Liste des chauffeurs récupérée avec succès",
            "data": {
              "current_page": 1,
              "data": [
                {
                  "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
                  "name": "Jean Dupont",
                  "phone": "+229 97 00 00 00",
                  "numero_permis": "PERM123456",
                  "date_expiration_permis": "2026-12-31",
                  "status": "actif",
                  "created_at": "2025-01-15T10:30:00.000000Z",
                  "updated_at": "2025-01-15T10:30:00.000000Z"
                }
              ],
              "first_page_url": "http://localhost/api/chauffeurs?page=1",
              "from": 1,
              "last_page": 1,
              "last_page_url": "http://localhost/api/chauffeurs?page=1",
              "next_page_url": null,
              "path": "http://localhost/api/chauffeurs",
              "per_page": 15,
              "prev_page_url": null,
              "to": 5,
              "total": 5
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/chauffeurs
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un chauffeur'
      description: 'Enregistre un nouveau chauffeur dans le système.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le nom complet du chauffeur.'
        required: true
        example: 'Jean Dupont'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Le numéro de téléphone du chauffeur.'
        required: true
        example: '+229 97 00 00 00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      numero_permis:
        name: numero_permis
        description: 'Le numéro unique du permis de conduire.'
        required: true
        example: PERM123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_expiration_permis:
        name: date_expiration_permis
        description: "La date d'expiration du permis (format: Y-m-d)."
        required: true
        example: '2026-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Le statut du chauffeur (actif, inactif, en_conge). Par défaut: actif.'
        required: false
        example: actif
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jean Dupont'
      phone: '+229 97 00 00 00'
      numero_permis: PERM123456
      date_expiration_permis: '2026-12-31'
      status: actif
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Chauffeur créé avec succès",
            "data": {
              "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "name": "Jean Dupont",
              "phone": "+229 97 00 00 00",
              "numero_permis": "PERM123456",
              "date_expiration_permis": "2026-12-31",
              "status": "actif",
              "created_at": "2025-01-15T10:30:00.000000Z",
              "updated_at": "2025-01-15T10:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Erreur de validation",
            "errors": {
              "numero_permis": [
                "Ce numéro de permis existe déjà"
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/chauffeurs/{id}'
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un chauffeur'
      description: "Récupère les détails d'un chauffeur spécifique."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID du chauffeur."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Détails du chauffeur récupérés avec succès",
            "data": {
              "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "name": "Jean Dupont",
              "phone": "+229 97 00 00 00",
              "numero_permis": "PERM123456",
              "date_expiration_permis": "2026-12-31",
              "status": "actif",
              "created_at": "2025-01-15T10:30:00.000000Z",
              "updated_at": "2025-01-15T10:30:00.000000Z",
              "is_permis_expire": false,
              "is_actif": true
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Chauffeur non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/chauffeurs/{id}'
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un chauffeur'
      description: "Met à jour les informations d'un chauffeur existant."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID du chauffeur."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le nom complet du chauffeur.'
        required: false
        example: 'Jean Dupont'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Le numéro de téléphone du chauffeur.'
        required: false
        example: '+229 97 00 00 00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      numero_permis:
        name: numero_permis
        description: 'Le numéro unique du permis de conduire.'
        required: false
        example: PERM123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_expiration_permis:
        name: date_expiration_permis
        description: "La date d'expiration du permis (format: Y-m-d)."
        required: false
        example: '2026-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Le statut du chauffeur (actif, inactif, en_conge).'
        required: false
        example: inactif
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jean Dupont'
      phone: '+229 97 00 00 00'
      numero_permis: PERM123456
      date_expiration_permis: '2026-12-31'
      status: inactif
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Chauffeur mis à jour avec succès",
            "data": {
              "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "name": "Jean Dupont",
              "phone": "+229 97 00 00 00",
              "numero_permis": "PERM123456",
              "date_expiration_permis": "2026-12-31",
              "status": "inactif",
              "created_at": "2025-01-15T10:30:00.000000Z",
              "updated_at": "2025-01-15T11:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Chauffeur non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/chauffeurs/{id}'
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un chauffeur'
      description: "Met à jour les informations d'un chauffeur existant."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID du chauffeur."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le nom complet du chauffeur.'
        required: false
        example: 'Jean Dupont'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Le numéro de téléphone du chauffeur.'
        required: false
        example: '+229 97 00 00 00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      numero_permis:
        name: numero_permis
        description: 'Le numéro unique du permis de conduire.'
        required: false
        example: PERM123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_expiration_permis:
        name: date_expiration_permis
        description: "La date d'expiration du permis (format: Y-m-d)."
        required: false
        example: '2026-12-31'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Le statut du chauffeur (actif, inactif, en_conge).'
        required: false
        example: inactif
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jean Dupont'
      phone: '+229 97 00 00 00'
      numero_permis: PERM123456
      date_expiration_permis: '2026-12-31'
      status: inactif
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Chauffeur mis à jour avec succès",
            "data": {
              "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "name": "Jean Dupont",
              "phone": "+229 97 00 00 00",
              "numero_permis": "PERM123456",
              "date_expiration_permis": "2026-12-31",
              "status": "inactif",
              "created_at": "2025-01-15T10:30:00.000000Z",
              "updated_at": "2025-01-15T11:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Chauffeur non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/chauffeurs/{id}'
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un chauffeur'
      description: |-
        Effectue une suppression logique (soft delete) d'un chauffeur.
        Le chauffeur reste dans la base mais est marqué comme supprimé.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID du chauffeur."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Chauffeur supprimé avec succès"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Chauffeur non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/chauffeurs/trashed/list
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des chauffeurs supprimés'
      description: 'Récupère la liste paginée de tous les chauffeurs supprimés (soft deleted).'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numéro de la page.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Liste des chauffeurs supprimés récupérée avec succès",
            "data": {
              "current_page": 1,
              "data": [
                {
                  "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
                  "name": "Jean Dupont",
                  "phone": "+229 97 00 00 00",
                  "numero_permis": "PERM123456",
                  "date_expiration_permis": "2026-12-31",
                  "status": "actif",
                  "created_at": "2025-01-15T10:30:00.000000Z",
                  "updated_at": "2025-01-15T10:30:00.000000Z",
                  "deleted_at": "2025-01-20T14:30:00.000000Z"
                }
              ],
              "first_page_url": "http://localhost/api/chauffeurs/trashed/list?page=1",
              "from": 1,
              "last_page": 1,
              "per_page": 15,
              "to": 3,
              "total": 3
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/chauffeurs/{id}/restore'
    metadata:
      groupName: 'Gestion des Chauffeurs'
      groupDescription: |-

        API pour gérer les chauffeurs (conducteurs) de l'application.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restaurer un chauffeur supprimé'
      description: 'Restaure un chauffeur précédemment supprimé (soft deleted).'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: "L'UUID du chauffeur supprimé."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Chauffeur restauré avec succès",
            "data": {
              "chauffeur_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "name": "Jean Dupont",
              "phone": "+229 97 00 00 00",
              "numero_permis": "PERM123456",
              "date_expiration_permis": "2026-12-31",
              "status": "actif",
              "created_at": "2025-01-15T10:30:00.000000Z",
              "updated_at": "2025-01-15T10:30:00.000000Z",
              "deleted_at": null
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Chauffeur supprimé non trouvé"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
