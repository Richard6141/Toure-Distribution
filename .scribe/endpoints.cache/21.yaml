## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des Ventes'
description: |-

  API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
  Toutes les routes nécessitent une authentification via Sanctum.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/ventes
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des ventes'
      description: 'Récupère la liste paginée de toutes les ventes avec leurs clients.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Numéro de la page.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Rechercher par numéro de vente.'
        required: false
        example: VTE-2025-001
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_id:
        name: client_id
        description: 'Filtrer par ID du client.'
        required: false
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entrepot_id:
        name: entrepot_id
        description: "Filtrer par ID de l'entrepôt."
        required: false
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'Filtrer par statut.'
        required: false
        example: validee
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      statut_paiement:
        name: statut_paiement
        description: 'Filtrer par statut de paiement.'
        required: false
        example: paye_partiellement
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_debut:
        name: date_debut
        description: 'date Filtrer par date minimum.'
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_fin:
        name: date_fin
        description: 'date Filtrer par date maximum.'
        required: false
        example: '2025-12-31'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: VTE-2025-001
      client_id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
      entrepot_id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a
      status: validee
      statut_paiement: paye_partiellement
      date_debut: '2025-01-01'
      date_fin: '2025-12-31'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Liste des ventes récupérée avec succès",
            "data": {
              "current_page": 1,
              "data": [
                {
                  "vente_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
                  "numero_vente": "VTE-2025-0001",
                  "client_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b",
                  "entrepot_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c",
                  "date_vente": "2025-01-15T10:00:00.000000Z",
                  "montant_total": "25000.00",
                  "montant_net": "23750.00",
                  "transport_price": "500.00",
                  "status": "validee",
                  "stock_movement_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2d"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/ventes
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer une vente'
      description: |-
        Enregistre une nouvelle vente avec ses détails.
        Si la vente est créée avec le statut "validee", les stocks sont automatiquement mis à jour.

        **Options de validation automatique:**
        - Si `status` est "validee", un mouvement de stock est créé et validé automatiquement
        - Le stock de l'entrepôt source est diminué en temps réel
        - Si le stock est insuffisant, la création échoue
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      client_id:
        name: client_id
        description: "L'UUID du client."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entrepot_id:
        name: entrepot_id
        description: "L'UUID de l'entrepôt source."
        required: true
        example: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date_vente:
        name: date_vente
        description: 'La date et heure de la vente.'
        required: true
        example: '2025-01-15 10:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      remise:
        name: remise
        description: 'La remise globale.'
        required: false
        example: '1250.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      transport_price:
        name: transport_price
        description: 'Le prix du transport.'
        required: false
        example: '500.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'Le statut (en_attente par défaut, validee pour mise à jour automatique des stocks).'
        required: false
        example: validee
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      note:
        name: note
        description: 'Des notes.'
        required: false
        example: 'Vente avec remise spéciale'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      details:
        name: details
        description: 'Les détails de la vente.'
        required: true
        example:
          -
            product_id: uuid
            quantite: 10
            prix_unitaire: 2500
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'details[].product_id':
        name: 'details[].product_id'
        description: 'Must be a valid UUID. The <code>product_id</code> of an existing record in the products table.'
        required: true
        example: 6ff8f7f6-1eb3-3525-be4a-3932c805afed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'details[].quantite':
        name: 'details[].quantite'
        description: 'Must be at least 1.'
        required: true
        example: 67
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'details[].prix_unitaire':
        name: 'details[].prix_unitaire'
        description: 'Must be at least 0.'
        required: true
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'details[].remise_ligne':
        name: 'details[].remise_ligne'
        description: 'Must be at least 0.'
        required: false
        example: 77
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'details[].taux_taxe':
        name: 'details[].taux_taxe'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 15
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      client_id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2b
      entrepot_id: 9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2c
      date_vente: '2025-01-15 10:00:00'
      remise: '1250.00'
      transport_price: '500.00'
      status: validee
      note: 'Vente avec remise spéciale'
      details:
        -
          product_id: uuid
          quantite: 10
          prix_unitaire: 2500
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Vente créée avec succès et stocks mis à jour",
            "data": {
              "vente_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2a",
              "numero_vente": "VTE-2025-0001",
              "transport_price": "500.00",
              "stock_movement_id": "9d0e8f5a-3b2c-4d1e-8f6a-7b8c9d0e1f2d",
              "status": "validee"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Stock insuffisant pour le produit Produit A. Disponible: 5, Demandé: 10"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une vente'
      description: "Récupère les détails complets d'une vente."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vente.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Vente non trouv\u00e9e"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une vente'
      description: |-
        Met à jour les informations d'une vente.
        **Important:** Si le statut passe à "validee", les stocks seront mis à jour automatiquement.
        Si le statut passe à "annulee", le mouvement de stock sera annulé et les stocks restaurés.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vente.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Le statut de la vente.'
        required: false
        example: validee
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      transport_price:
        name: transport_price
        description: 'Le prix du transport.'
        required: false
        example: '500.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      note:
        name: note
        description: 'Des notes.'
        required: false
        example: 'Livraison effectuée'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      status: validee
      transport_price: '500.00'
      note: 'Livraison effectuée'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Vente mise à jour avec succès",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Stock insuffisant pour valider cette vente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une vente'
      description: |-
        Met à jour les informations d'une vente.
        **Important:** Si le statut passe à "validee", les stocks seront mis à jour automatiquement.
        Si le statut passe à "annulee", le mouvement de stock sera annulé et les stocks restaurés.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vente.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Le statut de la vente.'
        required: false
        example: validee
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      transport_price:
        name: transport_price
        description: 'Le prix du transport.'
        required: false
        example: '500.00'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      note:
        name: note
        description: 'Des notes.'
        required: false
        example: 'Livraison effectuée'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      status: validee
      transport_price: '500.00'
      note: 'Livraison effectuée'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Vente mise à jour avec succès",
            "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Stock insuffisant pour valider cette vente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/ventes/{id}'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer une vente'
      description: |-
        Effectue une suppression logique d'une vente.
        Si la vente est validée, le mouvement de stock sera annulé et les stocks restaurés.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vente.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/ventes/trashed/list
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des ventes supprimées'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"Liste des ventes supprim\u00e9es r\u00e9cup\u00e9r\u00e9e avec succ\u00e8s","data":{"current_page":1,"data":[],"first_page_url":"http:\/\/localhost\/api\/ventes\/trashed\/list?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost\/api\/ventes\/trashed\/list?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost\/api\/ventes\/trashed\/list?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost\/api\/ventes\/trashed\/list","per_page":15,"prev_page_url":null,"to":null,"total":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/ventes/{id}/restore'
    metadata:
      groupName: 'Gestion des Ventes'
      groupDescription: |-

        API pour gérer les ventes aux clients avec mise à jour automatique des stocks.
        Toutes les routes nécessitent une authentification via Sanctum.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restaurer une vente supprimée'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the vente.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
