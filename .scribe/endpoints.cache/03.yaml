## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Clients Management'
description: |-

  APIs pour gérer les clients
endpoints:
  -
    httpMethods:
      - GET
    uri: api/clients/statistics/overview
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Statistiques des clients'
      description: 'Récupère des statistiques générales sur les clients.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "total_clients": 150,
              "active_clients": 120,
              "inactive_clients": 30
            }
          }
        headers: []
        description: Succès
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/clients/search
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Rechercher des clients'
      description: 'Recherche avancée de clients avec de multiples critères.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Terme de recherche.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fields:
        name: fields
        description: 'optionnel Champs à rechercher.'
        required: false
        example:
          - name_client
          - email
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_type_id:
        name: client_type_id
        description: 'optionnel Filtrer par type de client.'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'optionnel Filtrer par statut.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'optionnel Page à récupérer.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'optionnel Éléments par page.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      query: John
      fields:
        - name_client
        - email
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
      is_active: true
      page: 1
      per_page: 20
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [],
            "meta": {
              "total": 0,
              "per_page": 20,
              "current_page": 1
            }
          }
        headers: []
        description: Succès
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/clients
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste tous les clients'
      description: |-
        Récupère la liste de tous les clients avec pagination et filtres optionnels.
        Vous pouvez filtrer par nom, email, code, ville, IFU, marketteur, statut et type de client.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page à récupérer (pagination).'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Nombre d'éléments par page (max: 100)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Recherche globale (nom, email, code, IFU, représentant, marketteur).'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'Rechercher par nom de client.'
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Rechercher par email.'
        required: false
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'Rechercher par code client.'
        required: false
        example: CLI-ABC123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'Rechercher par ville.'
        required: false
        example: Cotonou
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ifu:
        name: ifu
        description: 'Rechercher par numéro IFU.'
        required: false
        example: '1234567890123'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      marketteur:
        name: marketteur
        description: 'Rechercher par marketteur.'
        required: false
        example: 'Marie Dupont'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_type_id:
        name: client_type_id
        description: 'Filtrer par type de client (UUID).'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'Filtrer par statut actif.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      with_client_type:
        name: with_client_type
        description: 'Inclure les informations du type de client.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      balance_filter:
        name: balance_filter
        description: 'Filtrer par solde (positive, negative, zero).'
        required: false
        example: positive
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 15
      search: John
      name: 'John Doe'
      email: john@example.com
      code: CLI-ABC123
      city: Cotonou
      ifu: '1234567890123'
      marketteur: 'Marie Dupont'
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
      is_active: true
      with_client_type: true
      balance_filter: positive
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "client_id": "550e8400-e29b-41d4-a716-446655440000",
                "code": "CLI-ABC123",
                "name_client": "John Doe",
                "name_representant": "Jane Smith",
                "marketteur": "Marie Dupont",
                "client_type_id": "550e8400-e29b-41d4-a716-446655440001",
                "adresse": "123 Rue de la Paix",
                "city": "Cotonou",
                "email": "john.doe@example.com",
                "ifu": "1234567890123",
                "phonenumber": "+229 12 34 56 78",
                "credit_limit": "500000.00",
                "current_balance": "150000.00",
                "base_reduction": "5.00",
                "is_active": true,
                "created_at": "2024-01-15T10:30:00Z",
                "updated_at": "2024-01-15T10:30:00Z"
              }
            ]
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "error": {
              "code": "VALIDATION_ERROR",
              "message": "Les données fournies sont invalides",
              "details": {
                "per_page": ["Le champ per_page ne peut pas dépasser 100."]
              }
            }
          }
        headers: []
        description: 'Erreur de validation'
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "error": {
              "code": "DATABASE_ERROR",
              "message": "Une erreur est survenue lors de la récupération des clients",
              "details": "Erreur de connexion à la base de données"
            }
          }
        headers: []
        description: 'Erreur serveur'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/clients
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouveau client'
      description: |-
        Crée un nouveau client avec les informations fournies.
        L'UUID et le code client sont générés automatiquement si non fournis.
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name_client:
        name: name_client
        description: 'Nom complet du client.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name_representant:
        name: name_representant
        description: 'optionnel Nom du représentant du client.'
        required: false
        example: 'Jane Smith'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      marketteur:
        name: marketteur
        description: 'optionnel Nom du marketteur associé au client.'
        required: false
        example: 'Marie Dupont'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      client_type_id:
        name: client_type_id
        description: 'optionnel UUID du type de client.'
        required: false
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      adresse:
        name: adresse
        description: 'optionnel Adresse du client.'
        required: false
        example: '123 Rue de la Paix'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'optionnel Ville du client.'
        required: false
        example: Cotonou
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'optionnel Email unique du client.'
        required: false
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ifu:
        name: ifu
        description: 'optionnel Numéro IFU (Identifiant Fiscal Unique).'
        required: false
        example: '1234567890123'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phonenumber:
        name: phonenumber
        description: 'optionnel Numéro de téléphone.'
        required: false
        example: '+229 12 34 56 78'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      credit_limit:
        name: credit_limit
        description: 'optionnel Limite de crédit (défaut: 0).'
        required: false
        example: 500000.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      current_balance:
        name: current_balance
        description: 'optionnel Solde actuel (défaut: 0).'
        required: false
        example: 0.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      base_reduction:
        name: base_reduction
        description: 'optionnel Réduction de base en pourcentage (0-100, défaut: 0).'
        required: false
        example: 5.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: 'optionnel Statut actif (défaut: true).'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name_client: 'John Doe'
      name_representant: 'Jane Smith'
      marketteur: 'Marie Dupont'
      client_type_id: 550e8400-e29b-41d4-a716-446655440000
      adresse: '123 Rue de la Paix'
      city: Cotonou
      email: john.doe@example.com
      ifu: '1234567890123'
      phonenumber: '+229 12 34 56 78'
      credit_limit: 500000.0
      current_balance: 0.0
      base_reduction: 5.0
      is_active: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Client créé avec succès",
            "data": {
              "client_id": "550e8400-e29b-41d4-a716-446655440000",
              "code": "CLI00001",
              "name_client": "John Doe",
              "email": "john.doe@example.com"
            }
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "error": {
              "code": "DUPLICATE_EMAIL",
              "message": "Cet email est déjà utilisé par un autre client",
              "field": "email"
            }
          }
        headers: []
        description: 'Email déjà utilisé'
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "error": {
              "code": "CREATE_ERROR",
              "message": "Impossible de créer le client",
              "details": "Erreur lors de l'enregistrement"
            }
          }
        headers: []
        description: 'Erreur lors de la création'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/clients/{client_id}'
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un client spécifique'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'UUID du client.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_id: architecto
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "client_id": "550e8400-e29b-41d4-a716-446655440000",
              "code": "CLI-ABC123",
              "name_client": "John Doe",
              "email": "john.doe@example.com"
            }
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": {
              "code": "NOT_FOUND",
              "message": "Client non trouvé",
              "details": "Aucun client ne correspond à l'ID fourni"
            }
          }
        headers: []
        description: 'Client non trouvé'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/clients/{client_id}'
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un client'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'UUID du client.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_id: architecto
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Client mis à jour avec succès",
            "data": {
              "client_id": "550e8400-e29b-41d4-a716-446655440000",
              "name_client": "John Doe Updated"
            }
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": {
              "code": "NOT_FOUND",
              "message": "Client non trouvé"
            }
          }
        headers: []
        description: 'Client non trouvé'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/clients/{client_id}'
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un client'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'UUID du client.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_id: architecto
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Client mis à jour avec succès",
            "data": {
              "client_id": "550e8400-e29b-41d4-a716-446655440000",
              "name_client": "John Doe Updated"
            }
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": {
              "code": "NOT_FOUND",
              "message": "Client non trouvé"
            }
          }
        headers: []
        description: 'Client non trouvé'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/clients/{client_id}'
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un client (soft delete)'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'UUID du client.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_id: architecto
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Client supprimé avec succès"
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": {
              "code": "NOT_FOUND",
              "message": "Client non trouvé"
            }
          }
        headers: []
        description: 'Client non trouvé'
        custom: []
      -
        status: 409
        content: |-
          {
            "success": false,
            "error": {
              "code": "CANNOT_DELETE",
              "message": "Impossible de supprimer ce client car il possède des transactions",
              "details": "Veuillez d'abord supprimer ou archiver les transactions associées"
            }
          }
        headers: []
        description: 'Client avec transactions'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/clients/{client_id}/update-balance'
    metadata:
      groupName: 'Clients Management'
      groupDescription: |-

        APIs pour gérer les clients
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour le solde d'un client"
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'UUID du client.'
        required: true
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      client_id: architecto
      id: 550e8400-e29b-41d4-a716-446655440000
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      amount:
        name: amount
        description: 'Montant à ajouter au solde (peut être négatif).'
        required: true
        example: 50000.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: "optionnel Description de l'opération."
        required: false
        example: 'Paiement facture INV-001'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      amount: 50000.0
      description: 'Paiement facture INV-001'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Solde mis à jour avec succès",
            "data": {
              "client_id": "550e8400-e29b-41d4-a716-446655440000",
              "previous_balance": "150000.00",
              "new_balance": "200000.00",
              "amount_added": "50000.00",
              "available_credit": "300000.00"
            }
          }
        headers: []
        description: Succès
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": {
              "code": "NOT_FOUND",
              "message": "Client non trouvé"
            }
          }
        headers: []
        description: 'Client non trouvé'
        custom: []
      -
        status: 422
        content: |-
          {
            "success": false,
            "error": {
              "code": "CREDIT_LIMIT_EXCEEDED",
              "message": "Cette opération dépasserait la limite de crédit autorisée",
              "details": {
                "current_balance": "150000.00",
                "credit_limit": "500000.00",
                "attempted_amount": "400000.00",
                "available_credit": "350000.00"
              }
            }
          }
        headers: []
        description: 'Dépassement de limite de crédit'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
